apiVersion: v1
kind: PersistentVolume
metadata:
  name: keycloak
  labels:
    app: keycloak
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/keycloak"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak
spec:
  selector:
    matchLabels:
      app: keycloak
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
spec:
  selector:
    matchLabels:
      app: keycloak                                   
  replicas: 1
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      volumes:
      - name: pg-data
        persistentVolumeClaim:
          claimName: keycloak
      containers:
      - image: jboss/keycloak
        name: keycloak
        ports:
        - containerPort: 8080
        env:
        - name: DB_VENDOR
          value: "POSTGRES"
        - name: DB_ADDR
          value: "localhost"
        - name: DB_DATABASE
          value: "keycloakdb"
        - name: DB_USER
          value: "keycloak"
        - name: DB_SCHEMA
          value: "public"
        - name: DB_PASSWORD
          value: "mypassword"
        - name: KEYCLOAK_USER
          value: "${KEYCLOAK_USER}"
        - name: KEYCLOAK_PASSWORD
          value: "${KEYCLOAK_PASSWORD}"
      - image: postgres:latest
        name: postgres
        env:
        - name: POSTGRES_PASSWORD
          value: "mypassword"
        - name: POSTGRES_USER
          value: "keycloak"
        - name: POSTGRES_DB
          value: "keycloakdb"
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: pg-data

---

apiVersion: v1
kind: Service
metadata:
  name: keycloak
spec:
  selector:
    app: keycloak
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
status:
  loadBalancer: {}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
    nginx.ingress.kubernetes.io/proxy-buffers: "64k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers: "64k"
    nginx.ingress.kubernetes.io/fastcgi-buffer-size: "32k"
    nginx.ingress.kubernetes.io/fastcgi-buffers: "4"
spec:
  rules:
  - http:
      paths:
      - path: /auth/
        pathType: Prefix
        backend:
          service:
            name: keycloak
            port:
              number: 8080
